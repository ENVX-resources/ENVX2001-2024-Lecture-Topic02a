{
  "hash": "704f2ef54dc823f9eb5d944c5c53353b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Lecture 02a -- Sampling designs I\nsubtitle: ENVX2001 Applied Statistical Methods\nauthor: Dr. Januar Harianto \ninstitute: The University of Sydney\ndate: last-modified # today | last-modified\ndate-format: \"MMM YYYY\"\nexecute:\n  cache: false\n  echo: true\neditor-options:\n  canonical: true\ntoc: true\ntoc-depth: 1\ntoc-title: Outline\n---\n\n\n\n\n# Last week\n## Observational study vs. controlled experiment\n| Aspect | Observational study | Controlled experiment |\n|--------|---------------------|-----------------------|\n| **Control** | No control over the variables of interest - **Mensurative** and **Absolute** | Control over the variables of interest - **Comparative** and **Manipulative** |\n| **Causation** | Cannot establish causation, but perhaps **association** | Can establish **causation** |\n| **Feasibility** | Can be done in many cases | May be destructive and cannot always be done |\n\n\n# Today: observational studies\n## Two common types\n::: fragment\n### Surveys\n- Estimate a statistic (e.g. mean, variance), but\n- **no temporal change** during estimate.\n- *E.g. measuring species richness in a forest*.\n:::\n::: fragment\n### Monitoring studies\n- Estimate a ***change*** in statistic (same as above), and\n- **temporal change** across observations, i.e. before and after.\n- *E.g. measuring species richness in a forest **before and after a fire***.\n:::\n\n\n## Sampling designs\n\n::: fragment\n### Simple random sampling:\n- Each unit has an equal chance of being selected.\n- **Randomly sample units from the entire population.**\n\n![](images/simple_random.png){fig-align=\"center\" height=140}\n:::\n\n::: fragment\n### Stratified random sampling\n- The population is first divided into *strata* (more on this later).\n- **Randomly sample units within each strata by simple random sampling, *standardised* by the inclusion probability (or weight) of each strata.**\n\n![](images/stratified.png){fig-align=\"center\" height=140}\n:::\n\n\n\n## What is \"random\" sampling?\n\n::: fragment\n***Random*** selection of **finite** or **infinite** population units.\n:::\n\n::: {.fragment .fade-up}\n> What does *random* mean?\n:::\n\n::: fragment\nWithin a population, **all** units have a > 0 probability of being selected *i.e. everything has a chance to be selected*. \n\n::: incremental\n- This *chance* is called the **inclusion probability ($\\pi_i$)**:\n  - $\\pi_i$ is **equal** *within* a population unit -- *i.e. all units have the same chance of being selected*.\n  - $\\pi_i$ **not** necessarily equal *between different* population units -- *i.e. a unit from one population unit may have a different chance of being selected than a unit from another population unit* - more on this later.\n:::\n:::\n\n::: fragment\n### How do we perform random sampling in real life?\n- **Random number generator** (RNG) -- e.g. R's `sample()` function.\n- **Random number table** -- e.g. [Random number table](https://www.nist.gov/system/files/documents/2017/04/28/AppenB-HB133-05-Z.pdf) by the National Institute of Standards and Technology (NIST).\n:::\n\n\n# Interpreting sampled data\n\n\n## We know that...\n### From the previous lecture\n::: incremental\n- **Sample mean** is a good measure of central tendency.\n- **Sample variance** is a good measure of dispersion.\n- **Sample size** affects the precision of the sample mean.\n:::\n::: fragment\n### Can we combine all of the above in a single statistic?\n:::\n\n# Confidence intervals\n![](images/ci-garfield.png)\n\n## Combining an estimate with its precision\n\n- A **confidence interval (CI)** is a range of values, derived from a sample of data, that is used to estimate the range of values for a population **parameter**.\n- Crucial for **hypothesis testing** and **estimation**, the basis of statistical inference.\n- Will be frequently mentioned throughout this unit!\n\n### General form\n\nIn general, a CI has the form:\n$$\\text{estimate} \\pm \\text{margin of error}$$\n\nwhere the margin of error is a **function of the standard error** of the estimate:\n\n$$\\text{estimate} \\pm (\\text{critical value} \\times \\text{standard error (estimate)})$$\n\nwhere the critical value is based on the **sampling distribution** of the estimate i.e. the **$t$-distribution**.\n\n## Interpreting confidence intervals\n\n- Confidence intervals depend on a specified **confidence level** (e.g. 95%, 99%) with higher confidence levels producing wider intervals (i.e. more conservative).\n- Think of it as a **range of values** that we are fairly sure contains the true value of the population parameter.\n\n::: fragment\n### Fishing net analogy\n\n**Imagine that we are fishing in a river and we want to catch a fish that we saw.**\n\n- If we use a *spear* and throw it at a fish, we might miss it.\n- If we use a **net**, we have a better chance of catching the fish.\n- The *bigger* the net, the *more likely* we are to catch the fish.\n\nAnalogy: **The net is the confidence interval, and the fish is the true population parameter.**\n:::\n\n# Calculating confidence intervals\n\n## What we need\n\n1. **Estimate** of the population parameter, e.g. the [**sample mean**]{style=\"color: #e64626;\"}.\n2. [**Critical value**]{style=\"color: #e64626;\"} from the sampling distribution of the estimate, which depends on the **number of samples** and the **confidence level**. This is usually based on the **$t$-distribution**.\n3. **Standard error** of the estimate, standardised by the number of samples i.e. [**SE of the mean**]{style=\"color: #e64626;\"}.\n\n### Why the t-distribution?\n\n- The $t$-distribution results from **standardising the sample variance by the number of samples**.\n  - Used when the true population variance is unknown. \n- It resembles the normal distribution, but with heavier tails for small sample sizes. \n- As sample size increases, the $t$-distribution converges to the normal distribution.\n\n# Data story: soil carbon\n\n\n## Soil carbon\n:::: {.columns}\n::: {.column width=\"50%\"}\n### Data story\n\n![](images/datastory.png)\n\nSoil carbon content was measured at 7 locations across the area. The amount at each location was 48, 56, 90, 78, 86, 71, 42 tonnes per hectare (t/ha).\n:::\n\n::: {.column width=\"50%\"}\nWe start with the sampled data:\n\n::: {.cell}\n\n```{.r .cell-code}\nsoil <- c(48, 56, 90, 78, 86, 71, 42)\nsoil\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 48 56 90 78 86 71 42\n```\n\n\n:::\n:::\n\n\n**What is the mean soil carbon content and how confident are we in this estimate?**\n:::\n::::\n\n# Simple random sampling: estimates\n\n\n## 95 % Confidence interval\n\n### The formula\n$$95\\%\\ CI = \\bar y \\pm t^{0.025}_{n-1} \\times SE(\\bar y)$$\n\n::: fragment\n![](images/confused.gif){fig-align=\"center\" height=150}\n:::\n\n::: fragment\nRecall:\n$$CI = \\text{estimate} \\pm \\text{margin of error}$$\n\nSo:\n$$95\\%\\ CI = \\text{sample mean} \\pm \\text{t-critical value} \\times \\text{standard error of the mean}$$\n:::\n\n::: fragment\n**We need to calculate each of these components:** \n\n① Sample mean $\\bar y$; ⓶ Critical value $t^{0.025}_{n-1}$; and ③ Standard error of the mean $SE(\\bar y)$\n:::\n\n\n## Sample mean\n$$\\bar y = \\frac{1}{n} \\times \\sum_{i = 1}^{n}y_i$$\n\n> The **sum** of all sampled **values**, divided by the number of **samples**.\n\nRelatively straightforward to calculate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_soil <- mean(soil)\nmean_soil\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67.28571\n```\n\n\n:::\n:::\n\n\n## $t$-critical value\n\n### What is the $t$-distribution?\n\nThe $t$-distribution is a **family of distributions** indexed by a **parameter** called **degrees of freedom**.\n\n::: fragment\n### Understanding degrees of freedom for a mean estimate\n::: incremental\n- Degrees of freedom (df) represent the count of independent data points used to estimate a parameter.\n- For the mean, df equals `n - 1`. For a sample size `n`, the last sample isn't independent -- it **must** satisfy the mean.\n- For instance, in a 3-value data set with a mean of 6, if two values are 7 and 3, the final value **must** be 8 and df = 2.\n:::\n:::\n\n::: fragment\n### Calculating the $t$-critical value\nWe refer to the $t$-distribution table to find the critical value for a given confidence level and degrees of freedom. These days, we can use the `qt()` function in R. For a 95% confidence level, we use the 0.975 quantile since the $t$-distribution is symmetric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt_critical <- qt(0.975, df = length(soil) - 1)\nt_critical\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.446912\n```\n\n\n:::\n:::\n\n:::\n\n## Standard error of the mean\n\n::: fragment\nThe variance of the mean, $var(\\bar y)$, is:\n$$var(\\bar y) = \\frac{var(y)}{n}$$\n:::\n\n::: fragment\nVariance is standard deviation squared ($s^2$), so the formula is:\n$$var(\\bar y) = \\frac{s^2(y)}{n}$$\n:::\n\n::: fragment\nSince $SE = \\frac{s}{\\sqrt{n}}$, then the standard error of the mean, $SE(\\bar y)$, is:\n$$SE(\\bar y) = \\frac{s(y)}{\\sqrt{n}} = \\frac{\\sqrt{s^2(y)}}{\\sqrt{n}} = \\sqrt{var(\\bar y)}$$\n:::\n\n::: fragment\n![](images/wtf.gif){fig-align=\"center\" height=160}\n:::\n\n\n## In words\n\n> **step 1** calculate the variance $var(y)$ of the sampled values. <br>\n> **step 2** divide $var(y)$ by the number of samples ($n$) to obtain variance of the mean $var{(\\bar y)}$. <br>\n> **step 3** take the square root of $var{(\\bar y)}$ to obtain the standard error of the mean $\\sqrt{var{(\\bar{y})}} = SE(\\bar y)$.\n\n\n::: fragment\nIn R, we can calculate the standard error of the mean using the `var()` or `sd()` function and the number of samples.\n\n::: {.cell}\n\n```{.r .cell-code}\nse_mean <- sd(soil) / sqrt(length(soil))\n# also ok:\n# se_mean <- sqrt(var(soil) / length(soil))\n```\n:::\n\n:::\n\n## Putting it all together\n\nSo far we have:\n\n```r\nmean_soil <- mean(soil)\nt_critical <- qt(0.975, df = length(soil) - 1)\nse_mean <- sd(soil) / sqrt(length(soil))\n```\n\nNow we can calculate the confidence interval:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmargin_error <- t_critical * se_mean\nci95 <- c(mean = mean_soil, \n  L95 = mean_soil - margin_error, \n  U95 = mean_soil + margin_error)\n\nci95\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    mean      L95      U95 \n67.28571 49.84627 84.72516 \n```\n\n\n:::\n:::\n\n\n## Questions\n\n- How precise is our estimate?\n- How big a change must there be to estimate a statistically significant change?\n- **Can we sample more efficiently?**\n\n# Tomorrow: stratified random sampling\n\n## Thanks!\n\n### Questions?\n\nThis presentation is based on the [SOLES Quarto reveal.js template][soles-revealjs] and is licensed under a [Creative Commons Attribution 4.0 International License][cc-by] \n\n\n<!-- Links -->\n[soles-revealjs]: https://github.com/usyd-soles-edu/soles-revealjs\n[cc-by]: http://creativecommons.org/licenses/by/4.0/\n\n### [⇣PDF](Lecture-02a.pdf)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}